# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'demo.ui'
#
# Created by: PyQt5 UI code generator 5.15.9
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.

from PySide6 import QtCore, QtGui, QtWidgets
from PySide6.QtWidgets import QApplication, QMainWindow
from PySide6.QtWebEngineWidgets import QWebEngineView

import sys
import subprocess
import pathlib
import threading
import os
import signal
import atexit
from function.system import *
import urllib.request
#subprocess.run(["python", "manage.py","runserver","127.0.0.1:8000"])
class Ui_MainWindow(QtWidgets.QMainWindow):
    def __init__(self,high,width,port):
        super().__init__()
        self.setWindowTitle("微光-Luminous")
        self.setFixedSize(high, width)
        self.setWindowIcon(QtGui.QIcon("luminous_logo.png"))
        self.port = port
        #ui_web = subprocess.Popen("python web_ui.py", cwd = path)
        #self.process = ui_web

        self.setupUi(self)

    def setupUi(self, MainWindow):
        
        MainWindow.setObjectName("MainWindow")
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")

        self.horizontalLayout = QtWidgets.QHBoxLayout(self.centralwidget)
        self.horizontalLayout.setObjectName("horizontalLayout")

        self.webEngineView = QWebEngineView(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.webEngineView.sizePolicy().hasHeightForWidth())
        self.webEngineView.setSizePolicy(sizePolicy)
        self.webEngineView.setUrl(QtCore.QUrl("http://127.0.0.1:8000"))
        self.webEngineView.setObjectName("webEngineView")

        self.horizontalLayout.addWidget(self.webEngineView)
        MainWindow.setCentralWidget(self.centralwidget)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

        self.closeEvent = self.on_close

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "微光-Luminous"))
    
    def on_close(self, event):
        #self.process.kill()
        #self.process.wait()
        # while self.process.poll() == 0:
        #     self.process.kill()
        # if self.process.poll() != 0:
        #     self.process.kill()
        print("关闭窗口")
        urllib.request.urlopen("http://127.0.0.1:8000/clean")
        close(self.port)
        event.accept()
# class Ui_MainWindow(QMainWindow):
#     def __init__(self):
#         super().__init__()
#         self.setWindowTitle("微光-Luminous")
#         self.setFixedSize(800, 600)
#     def setupUi(self, MainWindow):
#         #MainWindow.setObjectName("微光-Luminous")
#         #self.setFixedSize(high, width)
#         #self.setWindowIcon(QtGui.QIcon("icon.png"))
#         self.centralwidget = QtWidgets.QWidget(MainWindow)
#         self.centralwidget.setObjectName("centralwidget")
#         self.horizontalLayout = QtWidgets.QHBoxLayout(self.centralwidget)
#         self.horizontalLayout.setObjectName("horizontalLayout")
#         self.webEngineView = QtWebEngineWidgets.QWebEngineView(self.centralwidget)
#         sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
#         sizePolicy.setHorizontalStretch(0)
#         sizePolicy.setVerticalStretch(0)
#         sizePolicy.setHeightForWidth(self.webEngineView.sizePolicy().hasHeightForWidth())
#         self.webEngineView.setSizePolicy(sizePolicy)
#         self.webEngineView.setUrl(QtCore.QUrl("http://127.0.0.1:8000"))
#         self.webEngineView.setObjectName("webEngineView")
#         self.horizontalLayout.addWidget(self.webEngineView)
#         MainWindow.setCentralWidget(self.centralwidget)

#         self.retranslateUi(MainWindow)
#         QtCore.QMetaObject.connectSlotsByName(MainWindow)

#     def retranslateUi(self, MainWindow):
#         _translate = QtCore.QCoreApplication.translate
#         MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))

# class ui(threading.Thread):
#     def __init__(self):
#         threading.Thread.__init__(self)
#     def run(self):
#         subprocess.run(["python", "manage.py","runserver","127.0.0.1:8000"])

# class window(threading.Thread):
#     def __init__(self):
#         threading.Thread.__init__(self)
#     def run(self):
#         high = 800
#         width = 600
#         app = QtWidgets.QApplication(sys.argv)
#         MainWindow = QtWidgets.QMainWindow()
#         ui = Ui_MainWindow()
#         ui.setupUi(MainWindow,high,width)
#         MainWindow.show()
#         sys.exit(app.exec_())
if __name__ == "__main__":
    # thread1 = window()
    # thread1.start()
    path = os.path.abspath("./")
    subprocess.Popen("python web_ui.py", cwd = path)
    #subprocess.Popen("python manage.py runserver 127.0.0.1:8000", cwd = path)
    #ui_web = subprocess.Popen("python web_ui.py", cwd = path)
    #1000
    #655
    high = 1280
    width = 720
    app = QApplication(sys.argv)
    ui = Ui_MainWindow(high, width, 8000)
    ui.show()
    #=app.exec_()
    sys.exit(app.exec())
    #app = QtWidgets.QApplication(sys.argv)
    #MainWindow = QtWidgets.QMainWindow()
    #ui = Ui_MainWindow()
    #ui.setupUi(MainWindow)
    #MainWindow.show()
    #sys.exit(app.exec_())
    
    # thread1.join()
    
